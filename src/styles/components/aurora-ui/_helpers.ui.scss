
//  Display 
//  =======
//  .u-d*

.u-db { display: block; }
.u-dib { display: inline-block; }
.u-di { display: inline; }
.u-dt { display: table; }
.u-dtc { display: table-cell; }
// .u-hide,
.u-dn { display: none; }


//  Float
//  =====
//  .u-fl, .u-fr // add clear

.u-fl { float: left; }
.u-fr { float: right; }


//  Position 
//  ========
//  .u-pos*

.u-posa { position: absolute; }
.u-posr { position: relative; }
.u-posf { position: fixed; }
.u-poss { position: static; }


//  Top, Right, Bottom, Left 
//  ========================
//  .u-t*, .u-r*, .u-b*, .u-l*

.u-t0 { top: 0; }
.u-t50p { top: 50%; }
.u-t100p { top: 100%; }
.u-r0 { right: 0; }
.u-r50p { right: 50%; }
.u-r100p { right: 100%; }
.u-b0 { bottom: 0; }
.u-b50p { bottom: 50%; }
.u-b100p { bottom: 100%; }
.u-l0 { left: 0; }
.u-l50p { left: 50%; }
.u-l100p { left: 100%; }



//  Width 
//  =====
//  .u-w*

// .u-full-w,
.u-w100p { width: 100%; }


//  Overflow 
//  ========
//  .u-o*

.u-oh { overflow: hidden; }
.u-oa { overflow: auto; }
.u-os { overflow: scroll; }



//  Vsibility
//  =========
//  .u-v*

.u-vh { visibility: hidden; }



//  Vsibility
//  =========
//  .u-bd

.u-bd {
  border-style: solid;
  border-width: $bd_width;
}

.u-bdt {
  border-top-style: solid;
  border-top-width: $bd_width;
}

.u-bdr {
  border-right-style: solid;
  border-right-width: $bd_width;
}

.u-bdb {
  border-bottom-style: solid;
  border-bottom-width: $bd_width;
}

.u-bdl {
  border-left-style: solid;
  border-left-width: $bd_width;
}

.u-br {
  border-radius: $bd_radius;
}

.u-br0 {
  border-radius: 0;
}

.u-br50p {
  border-radius: 50%;
}

.u-brtl {
  border-top-left-radius: $bd_radius;
}

.u-brtr {
  border-top-right-radius: $bd_radius;
}

.u-brbl {
  border-bottom-left-radius: $bd_radius;
}

.u-brbr {
  border-bottom-right-radius: $bd_radius;
}




//  Margins
//  =======
//  .u-m*, .u-mt*, .u-mr*, .u-mb*, .u-ml*

.u-mauto { margin: auto; }



//  Padding
//  =======
//  .u-p*, .u-pt*, .u-pr*, .u-pb*, .u-pl*



$max: 5;
$const : 0.5rem;

@for $i from 0 through $max {
  
  $value : pow( 2, $i - 1 ) * $const;

  @if( $i > 0 ){

    // Margin
    .u-m#{$i}   { margin:        $value; }
    .u-mt#{$i}  { margin-top:    $value; }
    .u-mr#{$i}  { margin-right:  $value; }
    .u-mb#{$i}  { margin-bottom: $value; }
    .u-ml#{$i}  { margin-left:   $value; }
    
    // Negative x Margin
    .u-mxn#{$i} { margin-left:   -$value; }

    // Padding
    .u-p#{$i}   { padding:      $value; }
    .u-py#{$i}  { padding-top:  $value; padding-bottom:   $value; }
    .u-px#{$i}  { padding-left: $value; padding-right:    $value; }

    .u-p#{$i}   { padding:        $value !important; }
    .u-pt#{$i}  { padding-top:    $value !important; }   
    .u-pr#{$i}  { padding-right:  $value !important; }   
    .u-pb#{$i}  { padding-bottom: $value !important; }   
    .u-pl#{$i}  { padding-left:   $value !important; }

  } 

  @else {

    .u-m#{$i}   { margin:        0 }
    .u-mt#{$i}  { margin-top:    0 }  
    .u-mr#{$i}  { margin-right:  0 }  
    .u-mb#{$i}  { margin-bottom: 0 }  
    .u-ml#{$i}  { margin-left:   0 }  

    .u-p#{$i}   { padding:        0 }
    .u-pt#{$i}  { padding-top:    0 }   
    .u-pr#{$i}  { padding-right:  0 }   
    .u-pb#{$i}  { padding-bottom: 0 }   
    .u-pl#{$i}  { padding-left:   0 }   

  } 

} // @for








//-----------------
//- 
//-  Special stuff
//-
//-----------------

.u-am-center {
  // the object needs specific measures
  
  @extend .u-mauto;
  @extend .u-posa; 
  @extend .u-t0;
  @extend .u-r0;
  @extend .u-b0;
  @extend .u-l0;
} 

.u-full {
  @extend .u-t0;
  @extend .u-r0;
  @extend .u-b0;
  @extend .u-l0;
}

.u-at-center {
  // the object doesn't needs specific measures
  @extend .u-posa;
  @extend .u-t50p;
  @extend .u-l50p;
  
  transform: translate( -50%, -50% );
}

.u-at-y {
  // the object doesn't needs specific measures
  @extend .u-posa;
  @extend .u-t50p;

  transform: translateY( -50% );
}













