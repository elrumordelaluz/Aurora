

/* * * * * * * * * * * * * * * * * * * * *\
  
    2. TYPO FUNCTIONS / MIXINS

\* * * * * * * * * * * * * * * * * * * * */



@mixin base_font_size( $base_fz, $bp ) {
  
  $ms_b: map-get( map-get($modular_scales, $bp), b);

  font-size: $ms_b / un_px($base_fz) * 100%;

}


@function push( $l, $fz, $lh, $b, $c) {
  @return ( $l - (( $fz / 2 * (( $lh * $b /  $fz) - $c)) / $b + 0.00001) ) * 1rem;
}

@function shift( $fz, $lh, $b, $c) {
  @return ( ( $fz / 2 * (( $lh * $b /  $fz) - $c )) / $b + 0.00001 ) * 1rem;
}


@mixin set( $val, $lh, $lines, $bp, $return: 'both' ) {

  $ms: map-get($modular_scales, $bp);
  $base: map-get($ms, b);
  $base: map-get($ms, b);
  $func: map-get($ms, f);
  $sizes: map-get($ms, s);

  $fz: ms( $val, $sizes, $func );
  
  @if ( $return == 'font' ) {
    font-size: $fz;
    line-height: #{$lh}rem;
  } @else if ( $return == 'baseline' ) {
    padding-top: shift( $fz, $lh, $base, 0.68 );
    margin-bottom: push( $lines, $fz, $lh, $base, 0.68 );
  } @else {
    font-size: $fz;
    line-height: #{$lh}rem;
    padding-top: shift( $fz, $lh, $base, 0.68 );
    margin-bottom: push( $lines, $fz, $lh, $base, 0.68 );
  } 

}




