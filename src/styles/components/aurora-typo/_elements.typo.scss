
/* * * * * * * * * * * * * * * * * * * * *\
  
    TYPOGRAPHY ELEMENTS

\* * * * * * * * * * * * * * * * * * * * */



h1, h2, h3, h4, h5, h6 {
  font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
  font-family: unquote( map-get($headingtype, font-family) );
  font-style: normal;
  font-weight: map-get( $headingtype, bold );
}

h1 { @include set( $val: 5, $lh: 3, $lines: 1, $bp: 'xs'); }
h2 { @include set( $val: 4, $lh: 3, $lines: 1, $bp: 'xs'); }
h3 { @include set( $val: 3, $lh: 3, $lines: 1, $bp: 'xs'); }
h4 { @include set( $val: 2, $lh: 2, $lines: 0, $bp: 'xs'); }
h5 { @include set( $val: 1, $lh: 2, $lines: 0, $bp: 'xs'); }
h6 { @include set( $val: 0, $lh: 2, $lines: 0, $bp: 'xs'); }
p { @include set( $val: 0, $lh: 2, $lines: 2, $bp: 'xs', $return: 'baseline'); }
.caption { @include set( $val: -2, $lh: 2, $lines: 2, $bp: 'xs', $return: 'baseline'); }
code, small { @include set( $val: -2, $lh: 1, $lines: 2, $bp: 'xs', $return: 'font'); }
ul, ol { @include set( $val: 0, $lh: 2, $lines: 2, $bp: 'xs', $return: 'baseline'); }

@each $bp-name, $bp-num in $breakpoints {

  @include breakpoints( $bp-name ) {
    
    $ms: map-get($modular_scales, $bp-name);
    $base: map-get($ms, b);
    $func: map-get($ms, f);
    $sizes: map-get($ms, s);

    @debug ms(4, $sizes, $func);

    h1 { @include set( $val: 5, $lh: 3, $lines: 1, $bp: $bp-name); }
    h2 { @include set( $val: 4, $lh: 3, $lines: 1, $bp: $bp-name); }
    h3 { @include set( $val: 3, $lh: 3, $lines: 1, $bp: $bp-name); }
    h4 { @include set( $val: 2, $lh: 2, $lines: 0, $bp: $bp-name); }
    h5 { @include set( $val: 1, $lh: 2, $lines: 0, $bp: $bp-name); }
    h6 { @include set( $val: 0, $lh: 2, $lines: 0, $bp: $bp-name); }
    p { @include set( $val: 0, $lh: 2, $lines: 2, $bp: $bp-name, $return: 'baseline'); }
    .caption { @include set( $val: -2, $lh: 2, $lines: 2, $bp: $bp-name, $return: 'baseline'); }
    code, small { @include set( $val: -2, $lh: 1, $lines: 2, $bp: $bp-name, $return: 'font'); }
    ul, ol { @include set( $val: 0, $lh: 2, $lines: 2, $bp: $bp-name, $return: 'baseline'); }

  }

}



small, .caption {
  font-family: unquote( map-get($headingtype, font-family) );
  font-style: normal;
  font-weight: map-get( $headingtype, regular );
}

.caption { 
  color: map-get($type_colors, caption);
}

h1 + .caption, .alpha + .caption, h2 + .caption, .beta + .caption, h3 + .caption, .gamma + .caption {
  margin-top: -1rem;
}

.delta + .caption, .epsilon + .caption, .zeta + .caption {
  margin-top: 0rem;
}

$link_color: map-get($type_colors, links);
$link_hover: darken( $link_color, 10 );
$heading_color: map-get($type_colors, heading);


a {
  transition: color .1s, background-color .1s;
  color: $link_color;
  text-decoration: none;

  &:hover, &:active, &:focus {
    color: $link_hover;
    text-decoration: none;
  }
}

ul, ol {
  li {
    
    font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;

    margin-left: 2rem;

    @include breakpoints(sm) {
      margin-left: 0;
    }
  }
}

b, strong, .bold {
  font-weight: map-get($bodytype, bold);
}

em, i, .italic {
  font-style: map-get($bodytype, italic);
}

blockquote {
  p {
    border-left: 0.15rem solid $link_color;
    font-style: map-get($bodytype, italic);
    padding-left: 1rem;
  }

  @include breakpoints( sm ) {
    margin-left: -1rem;
  }
}

hr {
  background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0) 50%,map-get($type_colors, caption) 50%);
  background-position: 0 50%;
  background-repeat: repeat-x;
  background-size: 100% 0.15rem;
  border: 0;
  margin: 0;
  padding-bottom: 3rem;
  padding-top: 3rem;
}

code, pre {
  background-color: #333;
  font-family: unquote(map-get($monospacetype, font-family));
}

pre {
  display: block;
  margin-bottom: 2rem;
  padding: 1rem;
  white-space: pre;
  white-space: pre-wrap;
  word-break: break-all;
  word-wrap: break-word;
}

code {
  line-height: 1rem;
}

.upper {
  letter-spacing: 0.1rem;
  text-transform: uppercase;
}

.small-caps {
  font-feature-settings: 'smcp' 1, 'kern' 1;
  letter-spacing: 0.1rem;
}

.lining-numerals {
  font-feature-settings: 'lnum' 1, 'kern' 1;
}

.oldstyle-numerals {
  font-feature-settings: 'onum' 1, 'kern' 1;
}


