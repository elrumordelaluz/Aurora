/* * * * * * * * * * * * * * * * * * * * *\
  
    FUNCTIONS & MIXINS

\* * * * * * * * * * * * * * * * * * * * */







/* MIXINS */


$default-breakpoint: root;
$current-breakpoint: $default-breakpoint;
$placeholders: ();


@mixin breakpoints($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);
  
  @if $value != null {                                    // 1
    $current-breakpoint: $breakpoint         !global;     // 2
    @media (min-width: $value) { @content; }              // 3
    $current-breakpoint: $default-breakpoint !global;     // 5
  }
  
  @else {                                  
    @warn "Invalid breakpoint `#{$breakpoint}`.";         // 6
  }
}

@mixin placeholder($name) {
  @if not index($placeholders, $name) {                  // 1
    $placeholders: append($placeholders, $name) !global; // 2
    
    @at-root {
      @each $breakpoint, $value in $breakpoints {        // 3
        @media (min-width: $value) {                     // 4
          %#{$name}-#{$breakpoint} {                     // 5
            @content;                                    // 6
          }
        }
      }
    
      %#{$name}-#{$default-breakpoint} {                 // 7
        @content;
      }
    }
  }
  
  @else {
    @warn "Placeholder `#{$name}` already exists.";      // 8
  }
}


@mixin _($name) {
  @extend %#{$name}-#{$current-breakpoint} !optional;
}





@include placeholder('fl') { float: left; }
@include placeholder('fr') { float: right; }
@include placeholder('dtc') { display: table-cell; }
@include placeholder('dib') { 
  display: inline-block; 
  vertical-align: top;
  letter-spacing: normal;
  word-spacing: normal;
  font-size: initial;
}


@mixin do-grid-items ( $cols, $prefix, $style ) {

  $px: if($prefix, -#{$prefix}, '' );


  @for $i from 1 through $cols {

    .item#{$px}-#{$i} {

      @if ( $style == 'float' ){

        @include _(fl);
        
        &.item--right {
          @include _(fr);
        }  

      } @else if ( $style == 'table' ){
        
          @include _(dtc);

      } @else if ( $style == 'block' ){
        
          @include _(dib);

      } @else if ( $style == 'all' ){
        
        .#{$aurora}grid--float & { @include _(fl); }

        .#{$aurora}grid--table & { @include _(dtc); }

        .#{$aurora}grid--block & { @include _(dib); }

      }
      
      width: if( $calc, calc( #{$i}/#{$cols} * 100% ), $i/$cols * 100% );
      
      @if ( $grid_debug ) {
        &:before {
          content:'Item#{$px}-#{$i}'!important;
        }
      }

    }

    
  } // @for

} // @mixin




@mixin do-push-items ( $cols, $prefix ) {

  $px: if($prefix, -#{$prefix}, '' );

  @for $i from 1 through $cols {
   
    .item#{$px}--push-#{$i} {

      left: if( $calc, calc( #{$i}/#{$cols} * 100% ), $i/$cols * 100% );

      @if ( $grid_debug ) {
        &:before {
          content:'Item#{$px}--push-#{$i}'!important;
        }
      }

    }
    
  } // @for

} // @mixin



@mixin do-pull-items ( $cols, $prefix ) {

  $px: if($prefix, -#{$prefix}, '' );

  @for $i from 1 through $cols {

    .item#{$px}--pull-#{$i} {
      
      right: if( $calc, calc( #{$i}/#{$cols} * 100% ), $i/$cols * 100% );

      @if ( $grid_debug ) {
        &:before {
          content:'Item#{$px}--pull-#{$i}'!important;
        }
      }

    }
    
  } // @for

} // @mixin



@mixin do-offset-items ( $cols, $prefix ) {

  $px: if($prefix, -#{$prefix}, '' );

  @for $i from 1 through $cols {

    .item#{$px}--offset-#{$i} {
      
      margin-left: if( $calc, calc( #{$i}/#{$cols} * 100% ), $i/$cols * 100% );

      @if ( $grid_debug ) {
        &:before {
          content:'Item#{$px}--offset-#{$i}'!important;
        }
      }

    }
    
  } // @for

} // @mixin



















